package CHotelServerInterface;


/**
* CHotelServerInterface/_CIHotelServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CHotelServerInterface.idl
* Friday, November 27, 2015 4:40:26 AM EST
*/

public class _CIHotelServerStub extends org.omg.CORBA.portable.ObjectImpl implements CHotelServerInterface.CIHotelServer
{

  public int getProfile (CHotelServerInterface.CHotelProfileHolder profile)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getProfile", true);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                profile.value = CHotelServerInterface.CHotelProfileHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getProfile (profile        );
            } finally {
                _releaseReply ($in);
            }
  } // getProfile

  public int reserveHotel (String guestID, CHotelServerInterface.CRoomType roomType, CHotelServerInterface.CDate checkInDate, CHotelServerInterface.CDate checkOutDate, int reservationID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("reserveHotel", true);
                $out.write_string (guestID);
                CHotelServerInterface.CRoomTypeHelper.write ($out, roomType);
                CHotelServerInterface.CDateHelper.write ($out, checkInDate);
                CHotelServerInterface.CDateHelper.write ($out, checkOutDate);
                CHotelServerInterface.CReserveIDHelper.write ($out, reservationID);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return reserveHotel (guestID, roomType, checkInDate, checkOutDate, reservationID        );
            } finally {
                _releaseReply ($in);
            }
  } // reserveHotel

  public int cancelHotel (String guestID, CHotelServerInterface.CRoomType roomType, CHotelServerInterface.CDate checkInDate, CHotelServerInterface.CDate checkOutDate)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cancelHotel", true);
                $out.write_string (guestID);
                CHotelServerInterface.CRoomTypeHelper.write ($out, roomType);
                CHotelServerInterface.CDateHelper.write ($out, checkInDate);
                CHotelServerInterface.CDateHelper.write ($out, checkOutDate);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cancelHotel (guestID, roomType, checkInDate, checkOutDate        );
            } finally {
                _releaseReply ($in);
            }
  } // cancelHotel

  public int checkAvailability (String guestID, CHotelServerInterface.CRoomType roomType, CHotelServerInterface.CDate checkInDate, CHotelServerInterface.CDate checkOutDate, CHotelServerInterface.CListAvailabilityHolder listAvail)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkAvailability", true);
                $out.write_string (guestID);
                CHotelServerInterface.CRoomTypeHelper.write ($out, roomType);
                CHotelServerInterface.CDateHelper.write ($out, checkInDate);
                CHotelServerInterface.CDateHelper.write ($out, checkOutDate);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                listAvail.value = CHotelServerInterface.CListAvailabilityHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkAvailability (guestID, roomType, checkInDate, checkOutDate, listAvail        );
            } finally {
                _releaseReply ($in);
            }
  } // checkAvailability

  public int getManagerObject (String manageID, String passCode, CHotelServerInterface.CIHotelServerManagerHolder serverManager)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getManagerObject", true);
                $out.write_string (manageID);
                $out.write_string (passCode);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                serverManager.value = CHotelServerInterface.CIHotelServerManagerHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getManagerObject (manageID, passCode, serverManager        );
            } finally {
                _releaseReply ($in);
            }
  } // getManagerObject

  public int transferReservation (String guestID, int reservationID, CHotelServerInterface.CRoomType roomType, CHotelServerInterface.CDate checkInDate, CHotelServerInterface.CDate checkOutDate, String targetHotel, int newResID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferReservation", true);
                $out.write_string (guestID);
                CHotelServerInterface.CReserveIDHelper.write ($out, reservationID);
                CHotelServerInterface.CRoomTypeHelper.write ($out, roomType);
                CHotelServerInterface.CDateHelper.write ($out, checkInDate);
                CHotelServerInterface.CDateHelper.write ($out, checkOutDate);
                $out.write_string (targetHotel);
                CHotelServerInterface.CReserveIDHelper.write ($out, newResID);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferReservation (guestID, reservationID, roomType, checkInDate, checkOutDate, targetHotel, newResID        );
            } finally {
                _releaseReply ($in);
            }
  } // transferReservation

  public int addQuerySockets (CHotelServerInterface.CINetSocketAddress[] sockets)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addQuerySockets", true);
                CHotelServerInterface.CListSocketsHelper.write ($out, sockets);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addQuerySockets (sockets        );
            } finally {
                _releaseReply ($in);
            }
  } // addQuerySockets

  public int deleteQuerySockets (CHotelServerInterface.CINetSocketAddress[] sockets)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteQuerySockets", true);
                CHotelServerInterface.CListSocketsHelper.write ($out, sockets);
                $in = _invoke ($out);
                int $result = CHotelServerInterface.CERROR_CODEHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deleteQuerySockets (sockets        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteQuerySockets

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CHotelServerInterface/CIHotelServer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CIHotelServerStub
