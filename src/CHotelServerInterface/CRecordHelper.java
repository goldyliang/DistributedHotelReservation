package CHotelServerInterface;


/**
* CHotelServerInterface/CRecordHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CHotelServerInterface.idl
* Sunday, December 6, 2015 9:58:24 PM EST
*/

abstract public class CRecordHelper
{
  private static String  _id = "IDL:CHotelServerInterface/CRecord:1.0";

  public static void insert (org.omg.CORBA.Any a, CHotelServerInterface.CRecord that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static CHotelServerInterface.CRecord extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [7];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_ulong);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_alias_tc (CHotelServerInterface.CReserveIDHelper.id (), "CReserveID", _tcOf_members0);
          _members0[0] = new org.omg.CORBA.StructMember (
            "reserveID",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[1] = new org.omg.CORBA.StructMember (
            "guestID",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "hotelName",
            _tcOf_members0,
            null);
          _tcOf_members0 = CHotelServerInterface.CRoomTypeHelper.type ();
          _members0[3] = new org.omg.CORBA.StructMember (
            "roomType",
            _tcOf_members0,
            null);
          _tcOf_members0 = CHotelServerInterface.CDateHelper.type ();
          _members0[4] = new org.omg.CORBA.StructMember (
            "checkInDate",
            _tcOf_members0,
            null);
          _tcOf_members0 = CHotelServerInterface.CDateHelper.type ();
          _members0[5] = new org.omg.CORBA.StructMember (
            "checkOutDate",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_float);
          _members0[6] = new org.omg.CORBA.StructMember (
            "rate",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (CHotelServerInterface.CRecordHelper.id (), "CRecord", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static CHotelServerInterface.CRecord read (org.omg.CORBA.portable.InputStream istream)
  {
    CHotelServerInterface.CRecord value = new CHotelServerInterface.CRecord ();
    value.reserveID = istream.read_ulong ();
    value.guestID = istream.read_string ();
    value.hotelName = istream.read_string ();
    value.roomType = CHotelServerInterface.CRoomTypeHelper.read (istream);
    value.checkInDate = CHotelServerInterface.CDateHelper.read (istream);
    value.checkOutDate = CHotelServerInterface.CDateHelper.read (istream);
    value.rate = istream.read_float ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, CHotelServerInterface.CRecord value)
  {
    ostream.write_ulong (value.reserveID);
    ostream.write_string (value.guestID);
    ostream.write_string (value.hotelName);
    CHotelServerInterface.CRoomTypeHelper.write (ostream, value.roomType);
    CHotelServerInterface.CDateHelper.write (ostream, value.checkInDate);
    CHotelServerInterface.CDateHelper.write (ostream, value.checkOutDate);
    ostream.write_float (value.rate);
  }

}
